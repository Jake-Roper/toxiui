name: ToxiUI Beta Build Release

on:
  push:
    branches:
      - development
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+"

jobs:
  on-development-branch-check:
    runs-on: ubuntu-latest
    outputs:
      on_development: ${{ steps.contains_tag.outputs.retval }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: rickstaa/action-contains-tag@783e6dc3a7732633ac3199c07e77ea8d8afc4dd5
        id: contains_tag
        with:
          frail: false
          reference: "development"
          tag: "${{ github.ref }}"

  test-syntax:
    if: ${{ always() }}
    needs: on-development-branch-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check if syntax style is valid
        uses: JohnnyMorganz/stylua-action@b01f0cf174adf7b3891599fa03ef1a0f48aac8a7
        if: success()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
          args: --check .
      - name: Check if code output is valid (BigWigsMods)
        uses: BigWigsMods/actions/luacheck@02ca6f20cba2493dbf714924fcc9ccbb7235bd00
        if: success()
        with:
          args: -q
      - name: Check if code output is valid (lunarmodules)
        uses: lunarmodules/luacheck@v1

  publish-development-release:
    runs-on: ubuntu-latest
    needs: [test-syntax, on-development-branch-check]
    if: ${{ needs.on-development-branch-check.outputs.on_development == 'true' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Draft release and upload release
        uses: Toxicom/packager@master
        if: success()
        env:
          GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}
          WAGO_API_TOKEN: ${{ secrets.WAGO_TOKEN }}
          CF_API_KEY: ${{ secrets.CF_API_KEY }}
          WOWI_API_TOKEN: ${{ secrets.WOWI_API_TOKEN }}
        with:
          args: -m .pkgmeta-dev
      - name: Read release tag
        if: success()
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

  generate-changelog:
    runs-on: ubuntu-latest
    needs:
      [test-syntax, on-development-branch-check, publish-development-release]
    if: ${{ needs.on-development-branch-check.outputs.on_development == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate Changelog
        id: changelog
        run: |
          echo "📦 **New features**" > changelog.md
          git log --pretty=format:"%s" ${{ steps.vars.outputs.tag }}..HEAD | grep -E "📦 NEW:" | sed -e 's/📦 NEW: /- /' >> changelog.md

          echo "" >> changelog.md
          echo "👌 **Improvements**" >> changelog.md
          git log --pretty=format:"%s" ${{ steps.vars.outputs.tag }}..HEAD | grep -E "👌 IMPROVE:" | sed -e 's/👌 IMPROVE: /- /' >> changelog.md

          echo "" >> changelog.md
          echo "🐛 **Bug fixes**" >> changelog.md
          git log --pretty=format:"%s" ${{ steps.vars.outputs.tag }}..HEAD | grep -E "🐛 FIX:" | sed -e 's/🐛 FIX: /- /' >> changelog.md

          echo "" >> changelog.md
          echo "📖 **Documentation**" >> changelog.md
          git log --pretty=format:"%s" ${{ steps.vars.outputs.tag }}..HEAD | grep -E "📖 DOC:" | sed -e 's/📖 DOC: /- /' >> changelog.md

          echo "" >> changelog.md
          echo "‼️ **Breaking changes**" >> changelog.md
          git log --pretty=format:"%s" ${{ steps.vars.outputs.tag }}..HEAD | grep -E "‼️ BREAKING:" | sed -e 's/‼️ BREAKING: /- /' >> changelog.md

        shell: bash

      - name: Output Changelog
        id: output-changelog
        run: cat changelog.md

      - name: Save Changelog
        id: save-changelog
        run: |
          echo "::set-output name=changelog::$(cat changelog.md)"
        shell: bash

  announce-changelog:
    runs-on: ubuntu-latest
    needs: [generate-changelog]
    if: ${{ needs.on-development-branch-check.outputs.on_development == 'true' }}
    steps:
      - name: Announce Changelog
        uses: sarisia/actions-status-discord@f268209d088ace9f9666322b04d60e013fef212d
        if: success()
        with:
          webhook: ${{ secrets.WEBHOOK_URL }}
          title: ":rocket: New beta build of ToxiUI is ready! :rocket:"
          nodetail: true
          color: 0x18a8ff
          username: ToxiBot - Beta Release
          avatar_url: "https://i.imgur.com/ib1CSUx.png"
          description: |
            :tools: Release `${{ steps.vars.outputs.tag }}`
            :scroll: Changelog (generated by a :robot:):

            ${{ steps.save-changelog.outputs.changelog }}

            :floppy_disk: Get the download down below :point_down:

            :information_source: Now also available on CurseForge and Wago beta channels!

  upload-release-to-discord:
    runs-on: ubuntu-latest
    needs: [publish-development-release, announce-changelog]
    if: ${{ needs.on-development-branch-check.outputs.on_development == 'true' }}
    steps:
      - name: Upload release file to Discord
        uses: sinshutu/upload-to-discord@c04454f4fbfd38079cbcd6f68492bd5d427556ce
        if: success() && needs.publish-development-release.result == 'success'
        env:
          DISCORD_WEBHOOK: ${{ secrets.WEBHOOK_URL }}
        with:
          args: .release/*.zip
          username: ToxiBot - Beta Release
          avatar_url: "https://i.imgur.com/ib1CSUx.png"
